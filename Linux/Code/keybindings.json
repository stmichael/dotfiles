// Place your key bindings in this file to override the defaults
// The following extensions are needed: emacs-region, ParagraphJump
[
    // Reset impractical key bindings
    {
        "key": "ctrl+f",
        "command": "-cursorRight",
        "when": "editorTextFocus && !inRegionMode"
    },
                {
        "key": "ctrl+b",
        "command": "-cursorLeft",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "ctrl+n",
        "command": "-cursorDown",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "ctrl+f",
        "command": "-cursorRightSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "ctrl+b",
        "command": "-cursorLeftSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUpSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "ctrl+n",
        "command": "-cursorDownSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "left",
        "command": "-cursorLeft",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "ctrl+left",
        "command": "-cursorWordStartLeft",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "down",
        "command": "-cursorDown",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "right",
        "command": "-cursorRight",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordEndRight",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "up",
        "command": "-cursorUp",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "ctrl+a",
        "command": "-cursorHome",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "ctrl+e",
        "command": "-cursorEnd",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "ctrl+v",
        "command": "-cursorPageDown",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+v",
        "command": "-cursorPageUp",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+,",
        "command": "-cursorTop",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+.",
        "command": "-cursorBottom",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "left",
        "command": "-cursorLeftSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "ctrl+left",
        "command": "-cursorWordStartLeftSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "down",
        "command": "-cursorDownSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "right",
        "command": "-cursorRightSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordEndRightSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "up",
        "command": "-cursorUpSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "ctrl+a",
        "command": "-cursorHomeSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "ctrl+e",
        "command": "-cursorEndSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "ctrl+v",
        "command": "-cursorPageDownSelect",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+v",
        "command": "-cursorPageUpSelect",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+,",
        "command": "-cursorTopSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+shift+.",
        "command": "-cursorBottomSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+w",
        "command": "-emacs.action.clipboardCopyAction"
    },
    {
        "key": "ctrl+w",
        "command": "-emacs.action.clipboardCutAction"
    },
    {
        "key": "ctrl+y",
        "command": "-emacs.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+g",
        "command": "-cancelSelection",
        "when": "editorHasTextFocus && editorHasSelection"
    },
    {
        "key": "ctrl+g",
        "command": "-emacs.exitRegionMode",
        "when": "inRegionMode"
    },
    {
        "key": "ctrl+space",
        "command": "-emacs.startRegionMode",
        "when": "editorFocus"
    },

    // Cursor movement
    {
        "key": "alt+h",
        "command": "cursorLeft",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+h",
        "command": "cursorLeftSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+n",
        "command": "cursorRight",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+n",
        "command": "cursorRightSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+t",
        "command": "cursorDown",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+t",
        "command": "cursorDownSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+c",
        "command": "cursorUp",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+c",
        "command": "cursorUpSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+shift+h",
        "command": "cursorLineStart",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+h",
        "command": "cursorLineStartSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+shift+n",
        "command": "cursorLineEnd",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+n",
        "command": "cursorLineEndSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+shift+c",
        "command": "cursorPageUp",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+c",
        "command": "cursorPageUpSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+shift+t",
        "command": "cursorPageDown",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+t",
        "command": "cursorPageDownSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+d",
        "command": "cursorTop",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+d",
        "command": "cursorTopSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+shift+d",
        "command": "cursorBottom",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+d",
        "command": "cursorBottomSelect",
        "when": "editorTextFocus && inRegionMode"
    },

    {
        "key": "alt+g",
        "command": "cursorWordLeft",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+g",
        "command": "cursorWordLeftSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+r",
        "command": "cursorWordRight",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+r",
        "command": "cursorWordRightSelect",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+shift+g",
        "command": "paragraphjump.up",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+g",
        "command": "paragraphjump.selectup",
        "when": "editorTextFocus && inRegionMode"
    },
    {
        "key": "alt+shift+r",
        "command": "paragraphjump.down",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+shift+r",
        "command": "paragraphjump.selectdown",
        "when": "editorTextFocus && inRegionMode"
    },

    {
        "key": "alt+t",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+c",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },

    // Text modification
    {
        "key": "alt+u",
        "command": "deleteRight"
    },
    {
        "key": "alt+space",
        "command": "emacs.startRegionMode",
        "when": "editorTextFocus && !inRegionMode"
    },
    {
        "key": "alt+space",
        "command": "emacs.exitRegionMode",
        "when": "editorTextFocus && inRegionMode"
    },

    // Tab handling
    {
        "key": "ctrl+b left",
        "command": "workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+b right",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+alt+n",
        "command": "workbench.action.focusRightGroup"
    }

]
